.. _about-docs:

=================================
|info-sign| About these documents
=================================

.. |info-sign| image:: images/info-sign.png
   :height: 25
   :width: 25

.. |github| image:: images/github.png
   :height: 17
   :width: 17

.. |gitadd| image:: images/git-add.png
   :height: 16
   :width: 15

In August 2013, in preparation for the launch of AtoM 2.0.0, `Artefactual
Systems <http://www.artefactual.com>`__, lead developers of the `AtoM
<http://www.accesstomemory.org/>`__ project, began work to rewrite all project
documentation and migrate it from a `MediaWiki
<http://www.mediawiki.org/wiki/MediaWiki>`__ site to a new platform, using the
`Sphinx Documentation Generator <http://sphinx-doc.org/>`__ (version 1.1.3) as
the new basis for the AtoM User Manual and Administrator's Manual. `Sphinx
<http://sphinx-doc.org/>`__ is an open-source documentation generator that
uses reStructuredText (`reST
<http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html>`__)
markup format as its basis, and converts reST files into `HTML
<https://en.wikipedia.org/wiki/Html>`__, `PDF
<https://en.wikipedia.org/wiki/Pdf>`__, and `EPub
<https://en.wikipedia.org/wiki/EPUB>`__ formats. Sphinx was originally
developed by George Brandl and publicly released under a `BSD
<https://en.wikipedia.org/wiki/BSD_licenses>`__ license in on March 21, 2008.
reStructuredText (`reST
<http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html>`__) is a
lightweight markup language used in Sphinx documentation, written in plaintext
using  simple constructs to indicate the structure of a document, and which is
human-readable in either raw (i.e. the text file itself) or processed (e.g. an
HTML document, which can then be styled by `CSS
<https://en.wikipedia.org/wiki/CSS>`__) form. reST was originally developed by
David Goodger and released into the public domain on April 2, 2002.

The **Access to Memory** (`AtoM <http://www.accesstomemory.org/>`__ ) project
welcomes community contributions to its documentation. All AtoM documents are
publicly released under a Creative Commons Attribution-ShareAlike 3.0 Unported
licence (`CC BY SA <http://creativecommons.org/licenses/by-sa/3.0/>`__), and
we rely on input, contributions, and translations from our community to make
our documents as useful and accessible as they can be. Information on how to
contribute to our documentation is included :ref:`below
<about-contribute-docs>`.

* :ref:`Why move to Sphinx? <about-why-sphinx>`
* :ref:`Contribute documentation <about-contribute-docs>`

.. _about-why-sphinx:

|question-sign| Why move to Sphinx?
===================================

.. |question-sign| image:: images/question-sign.png
   :height: 23
   :width: 23

.. |compass| image:: images/compass.png
   :height: 18
   :width: 18

.. |code-fork| image:: images/code-fork.png
   :height: 18
   :width: 18

.. |copy| image:: images/copy.png
   :height: 18
   :width: 18

1. |compass| **Consolidation**: Formerly, documentation for the AtoM project's
   earlier releases (under the name ICA-AtoM; read more about the history of
   AtoM and the ICA-AtoM project here) was broken up across several different
   `wikis <https://en.wikipedia.org/wiki/Wiki>`__. It was not always easy for
   community members to find content, distinguish what was documentation from
   what was a development proposal, and whether or not the documentation was
   up to date or relevant to a particular release. This new documentation
   platform indicates a concerted effort by `Artefactual Systems
   <http://www.artefactual.com>`__, lead developers of the `AtoM
   <http://www.accesstomemory.org/>`__ project, to improve access to and ease
   of navigation within all project documentation and consolidate it to one
   platform.
2. |code-fork| **Versioning**: AtoM documentation is now maintained in a
   `GitHub <https://www.github.com>`__ code repository (`here
   <https://github.com/artefactual/atom-docs>`__). This allows us to fork the
   repository and create release-specific documents (e.g., 2.0.0 User Manual,
   2.1.0 User Manual, etc.), and continue to make documentation for legacy
   versions available to our community. Previously, all documentation was
   maintained on a `wiki <https://en.wikipedia.org/wiki/Wiki>`__; clauses were
   added for changes in newer versions and alternate screenshots for different
   themes. This made the documentation unnecessarily long and unclear to end-
   users. Now previous release documentation can be left unchanged so it
   remains relevant to the particular AtoM release, and users will be able to
   quickly locate documentation that is specific to the version of AtoM they
   are using.
3. |copy| **PDF and EPub formats**: `Sphinx <http://sphinx-doc.org/>`__ is
   designed to allow the generation of multiple different formats from
   reStructuredText (`reST
   <http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html>`__),
   including Portable Document Format (`PDF
   <https://en.wikipedia.org/wiki/Pdf>`__) and Electronic Publication (`EPub
   <https://en.wikipedia.org/wiki/EPUB>`__). Our community users have long
   asked for documentation to be made available in PDF format - as part of our
   attempts to improve the accessibility of our documentation, we felt that
   Sphinx would allow us to meet these goals most easily. With these
   additional formats, users will be able to view and print documentation more
   easily, across a wider range of platforms and devices.

.. SEEALSO::

   * `Sphinx Documentation <http://sphinx-doc.org/>`__
   * `reStructuredText Documentation
     <http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html>`__
   * |github| `The AtoM Documentation GitHub repository
     <https://github.com/artefactual/atom-docs>`__

:ref:`Back to top <about-docs>`

.. _about-contribute-docs:

================================
|group| Contribute documentation
================================

.. |group| image:: images/group.png
   :height: 23
   :width: 23

Want to help us improve our documentation? All AtoM documentation is publicly
available under a  Creative Commons Attribution-ShareAlike 3.0 Unported
licence (`CC BY SA <http://creativecommons.org/licenses/by-sa/3.0/>`__). We
rely on our community of users to help us keep our documentation clear,
comprehensive, and easy to use - if you see something missing or broken, or
have an idea about how to improve or expand upon our existing documentation,
please consider getting involved. There are three main ways you can help AtoM
improve its documentation:

* :ref:`Suggest minor fixes to Artefactual <contribute-via-email>`
* :ref:`Contribute documentation yourself <contribute-docs-yourself>`
* :ref:`Contribute documentation translations <contribute-docs-translations>`

.. _contribute-via-email:

|comments| Suggest minor fixes to Artefactual
=============================================

.. |comments| image:: images/comments.png
   :height: 23
   :width: 23

See a typo or a broken link? Have a question or a minor suggestion? If you've
noticed something that can be improved in our documentation, but don't have
the time or resources to fix the problem yourself, we want to hear from you!

**CONTACT US AT:** `webmaster@accesstomemory.org
<mailto:webmaster@accesstomemory.org>`__

.. IMPORTANT::

   AtoM documentation is freely maintained by `Artefactual Systems
   <http://www.artefactual.com>`__, lead developers of the `AtoM
   <http://www.accesstomemory.org/>`__ project. We do our best to ensure that
   our documentation is comprehensive, but as an open-source company that
   freely gives away software, documentation, and user support in our `User's
   Forum <https://groups.google.com/forum/#!forum/ica-atom-users>`__, please
   keep in mind that we have to prioritize our client assignments so that we
   can pay our bills and continue to provide free software and free community
   support.  If you've submitted a suggestion for a fix to our documetation
   via `webmaster@accesstomemory.org <mailto:webmaster@accesstomemory.org>`__,
   thank you! If it takes us a bit of time to implement a fix, it may be
   because we are currently focused on a client project - we will address any
   reported issues as soon as we are able. As always with open-source
   projects, the best way to ensure a fix is implemented is to contribute the
   fix yourself - we encourage our community users to become active
   contributors to all aspects of our projects.


.. _contribute-docs-yourself:

|edit| Contribute documentation yourself
========================================

.. |edit| image:: images/edit-sign.png
   :height: 23
   :width: 23

Is there a section missing from our documentation that you'd like to see? Or a
section that you'd like to improve by adding clearer instructions, more
screenshots, or alternative workflows? Help us improve our documentation by
submitting new or revised content yourself!

The following instructions will show you how to contribute changes to our
documentation straight from our `GitHub <https://github.com/>`__ repository
(`here <https://github.com/artefactual/atom-docs/>`__), using GitHub's user
interface (GitHub Flow), which provides all the tools you need - including a
text editor! If you are a more advanced user, you can do this from your own
computer using a text editor and the command-line - see GitHub's incredibly
useful `Help <https://help.github.com/>`__ documentation for guidance.

**Before you begin, you should:**

* Create a GitHub account if you don't have one already: go to
  https://github.com/ and sign up - it's easy!
* Read our :ref:`Contribution guidelines <contribute-guide>`, below
* Familiarlize yourself with `Sphinx <http://sphinx-doc.org/>`__ and
  `reStructuredText
  <http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html>`__

**An overview of the steps:**

* Create and/or log into your Github account
* :ref:`Find the document you want to edit <contribute-find-doc>`
* :ref:`contribute-github-edit`
* :ref:`contribute-commit-changes`
* :ref:`contribute-pull-request`

.. SEEALSO::

   * `Overview of GitHub Flow
     <https://github.com/blog/1557-github-flow-in-the-browser>`__
   * `GitHub Help <https://help.github.com>`__
   * `Git homepage <http://git-scm.com/>`__
   * `Learn git in your browser! <http://try.github.io/levels/1/challenges/1>`__
   * GitHub also has clients for `Windows <https://help.github.com/categories/58/articles>`__
     and `Mac <https://help.github.com/categories/31/articles>`__ if you prefer
     to work locally, but are intimidated by the command line!
   * Checkout the `GitHub Glossary <https://help.github.com/articles/github-glossary>`__
     to learn more about frequently used terms such as "fork", "branch",
     "repository", and "commit".

.. _contribute-find-doc:

Find the document you want to edit (or the place to add a new one)
------------------------------------------------------------------

1. First, sign into your GitHub account at https://github.com (if you don't
   have an account yet, you'll need to create one first. You can do this on
   the same page.)
2. Navigate to Artefactual's AtoM Documentation repository: you can do this
   through the user interface by typing *artefactual/atom-docs* into the
   search bar at the top of the page:

.. image:: images/git-atom-docs.*
   :align: center
   :width: 60%
   :alt: An image of the GitHub search bar

.. NOTE:: **What is a git repository?**

   A repository, or "repo", is simply a directory which contains your project
   work, as well as a few files which are used to communicate with Git.
   Repositories can exist either locally on your computer or as a remote copy
   (such as on GitHub.com). These instructions will show you how to create
   your own repository on GitHub.com, and then use this to submit changes to
   the AtoM documentation repository.

3. GitHub's user interface provides a graphical file-explorer to help you
   navigate through the text files in our documentation repository. The AtoM
   documentation repository's files are organized into folders that mimic the
   structure of the user manual found on the
   `home page <https://www.accesstomemory.org/docs/>`__ - for
   example, all files that relate to the User Manual section called "Add/Edit
   Content" are grouped together in a file called "add-edit-content". In
   GitHub, click on a folder to view its contents. Click on a .txt file to
   open it in-page.

.. image:: images/git-view.*
   :align: center
   :width: 60%
   :alt: An image of GitHub's repository browser

.. TIP::

   .. image:: images/git-branch.*
      :align: right
      :width: 21%
      :alt: An image of the GitHub branch button

   Can't find the right spot in GitHub? Don't forget to check the "Branch"
   drop-down - *atom-docs* is organized into several different branches, with
   the About/Contribute and FAQ docs on a different branch than the User and
   Admin manuals. Additionally, as we create new versions of our
   documentation for each major release, we will create new branches (2.0,
   2.1, 2.2, etc) - so make sure you are editing or adding to the correct
   branch! Ideally, you will add fixes to the most recent docs, so we can
   carry those improvements forward.

4. If you are **adding a new page**, navigate into the correct folder, and
   click the |gitadd| "Add" icon next to the file path at the top of the page.

.. image:: images/git-add-file.*
   :align: center
   :width: 50%
   :alt: An image of the GitHub "Add file" button

5. If you are **editing an existing page**, navigate to the correct text file,
   so that you can see its contents previewed on GitHub's interface. Then,
   click the "Edit" button found above the file preview:

.. image:: images/git-edit-button.*
   :align: center
   :width: 60%
   :alt: An image of the GitHub "Edit" button

.. TIP::

   If you find it easier to navigate to the document you want to edit on the
   Access to Memory website, we've included a link directly to the related
   page in our GitHub repository in the right-hand navigation bar. You can
   find the page here on our website, and then click the "Source code" link
   in the sidebar - AtoM will redirect you to the relevant file in our
   *atom-docs.git* repository.

   .. image:: images/atom-git-link.*
      :align: center
      :width: 40%
      :alt: An image of the AtoM documentation sidebar

6. GitHub will create a copy of the entire *atom-docs* repository in your
   chosen location (or in your own new repository if this is your first time
   using GitHub). Now you can edit to your heart's content without fear of
   breaking our production website or making the documents unavailable to
   other users. In git, this is known as "forking". At the top of the page,
   you'll see that now atom-docs is in your own repository (indicated by your
   chosen user name). You'll also see this message above the file editor, to
   remind you:

.. image:: images/git-fork-msg.*
   :align: center
   :width: 80%
   :alt: An image of the GitHub header after a successful forking

.. SEEALSO::

  GitHub Help has a great overview of how to fork which includes instructions
  for cloning the fork in your local machine, if you prefer to work there:
  https://help.github.com/articles/fork-a-repo


.. _contribute-github-edit:

Use GitHub's editor to make changes or additions
------------------------------------------------

7. When you click the "Edit" button above the text file preview, a copy of the
   *atom-docs* repository is made in your repository (associated with your
   GitHub account), and you'll be redirected to a web-based text editor, where
   you can make changes to the file via your web browser. If you are adding a
   new page, the text editor will be blank when it opens, and you can begin
   entering text. A full-screen option (called "zen mode") is included on the
   header bar if you need more space to work.

.. image:: images/git-edit.*
   :align: center
   :width: 60%
   :alt: An image of the GitHub Ace editor

8. Make the changes you want to the file. When you are done, scroll to the
   bottom of the page - next we will commit the changes.

.. IMPORTANT::

   Please review our :ref:`Contribution guidelines <contribute-guide>`
   **before** submitting any changes. Thanks!


.. SEEALSO::

   * GitHub Help's entry on `editing files <https://help.github.com/articles/editing-files>`__
   * GitHub Help's entry on `creating new files <https://help.github.com/articles/creating-new-files>`__
   * GitHub Help's entry on `moving files <https://help.github.com/articles/moving-a-file-to-a-new-location>`__
   * GitHub Help's entry on `renaming files <https://help.github.com/articles/renaming-a-file>`__
   * GitHub's built-in text editor uses the Ace Editor - you can read more about
     this open-source project `here <http://ace.c9.io/#nav=about>`__

.. _contribute-commit-changes:

Commit the changes
------------------

9. When you are finished editing and/or adding files in the text editor,
   scroll to the bottom of the page. You will see a box with several text
   fields to fill in before submitting your changes.

* **Commit Summary:** This is a required field. GitHub Help describes a
  "commit" as such: *"Think of a commit as a snapshot of your project – code,
  files, everything — at a particular point in time"*. Your commit summary is
  a concise way to summarize the changes to the project that users will find
  in the commit. **Commit summaries must be 50 characters or less:** this is
  more like a brief title so users can determine what has taken place at a
  glance. Keep it brief and to the point. Check out these
  `guidelines <http://git-scm.com/book/ch5-2.html#Commit-Guidelines>`__ in
  the Git documentation
* **Extended description:** This is an optional field, which we at Artefactual
  recommend using if you plan on editing our documentation. This is your
  chance to explain at greater length what the changes you made were, and why
  you felt you should make them. A concise message here will help us
  understand your work, and allow us to merge it into our documentation more
  quickly!

.. image:: images/git-commit.*
   :align: center
   :width: 60%
   :alt: An image of the GitHub commit fields

.. NOTE:: **What is a commit?**

   A commit, or "revision", is an individual change to a file (or set of
   files). It's like when you save a file, except with Git, every time you
   save it creates a unique ID (a.k.a. the "SHA" or "hash") that allows you to
   keep record of what changes where made when and by who. Commits usually
   contain a commit message which is a brief description of what changes were
   made. (GitHub Glossary)

10. Once you've added a commit summary (required) and an extended description
    (recommended), click the "Propose File Change" button. GitHub will branch
    your changes, and redirect you to a page where you can compare the changes
    to the original, as well as submit a "pull request" to the AtoM
    documentation repository.

.. NOTE:: **What is a git branch?**

   If you're making an app, a website, or working on documentation
   collaboratively, you might have a bunch of different features, ideas, or
   revisions in progress at any given time - some of which are ready to go,
   and others which are not. By default, the main branch of a repository is
   usually named "master" - in the AtoM documentation repository, we name
   each main branch after the documentation version it represents (for
   example, 2.0, 2.1, 2.2, about-contribute, faq). By "branching" away from
   the main code, you create a separate instance in which you can work on
   your changes, and then, when they've been reviewed and tested, merge them
   back into the main project. This allows multiple people to collaborate at
   once, and a single person to work on multiple different revisions at the
   same time without having to finish them all on the same schedule.

   With these instructions, GitHub is handling the branching automatically,
   so you don't have to worry! But now you know a bit more about how git (and
   GitHub) works. Find out more about git `here <http://git-scm.com/>`__.

.. _contribute-pull-request:

Submit a pull request to Artefactual
------------------------------------

11. Once you've finished your changes and clicked the "Propose File Change"
    button, GitHub will redirect you to a new page. On the bottom half of the
    page, you'll see a "diff" - a graphical representation of the changes
    you've made - the red fields with the **-** minus symbol in the sidebar
    indicate content that was changed/removed, while the green fields with the
    **+** plus symbol in the sidebar indicate the new content that was added.
    When you submit your changes to Artefactual, we'll be able to see this too
    - it offers us a quick way to understand where you've made changes, what
    was changed, and why.

.. image:: images/git-diff.*
   :align: center
   :width: 60%
   :alt: An image of the GitHub diff summary

12. At the top of the page, you'll see your commit summary and description,
    with a reminder above it from GitHub (in blue) that the changes are still
    only in your repository. To submit them to Artefactual for inclusion in
    the AtoM documentation, click the "Send pull request" button on the right-
    hand side of the page.

.. image:: images/git-send-pull.*
   :align: center
   :width: 60%
   :alt: An image of the GitHub pull request button

.. NOTE:: What's a pull request?

   Pull requests are proposed changes to a repository submitted by a user and
   accepted or rejected by a repository's collaborators (in this case,
   Artefactual, the maintainers of the AtoM documentation.

13. The page will reload with information about your pull request - you can
    see a summary of what you want to merge where at the top of the page (i.e.
    your patch or fix into one of our documentation branches). Your commit
    message and summary will be below - we'll see a similar message on our end
    when we receive the request.

.. image:: images/git-pull.*
   :align: center
   :width: 60%
   :alt: An image of a submitted GitHub pull request

.. SEEALSO::

   GitHub Help's page on `using pull requests
   <https://help.github.com/articles/using-pull-requests#pull-request-discussion>`__


14. Artefactual will receive your pull request, and one of our Product
    Managers will review the changes. If there's a problem, we can send you a
    message via GitHub, or even `begin a discussion
    <https://help.github.com/articles/using-pull-requests#pull-request-discussion>`__
    right on the code! This way, if there's something we don't understand
    about the changes you've made, we can connect with you directly.
15. Once we've accepted the pull request and merged it into our repository,
    you'll get a notification (you'll probably get an email too, unless you've
    changed your default GitHub account settings):

.. image:: images/git-pull-note.*
   :align: center
   :width: 60%
   :alt: An image of a GitHub notification

16. Clicking on the notification will show you details about it:

.. image:: images/git-pull-details.*
   :align: center
   :width: 60%
   :alt: An image of GitHub notification details on an accepted pull request

17. **Success!** Your contributions have been accepted, and merged into the AtoM
documents. You should be able to go to our website and see them in the
documentation. Thanks for helping out!

**QUESTIONS?**

If there's something that you're not clear about in these instructions, or
you've run into an unexpected error, send us an email at
webmaster@artefactual.com, or make a post in the AtoM `User Forum
<https://groups.google.com/forum/#!forum/ica-atom-users>`__!

:ref:`Back to top <about-docs>`

.. _contribute-guide:

Documentation contribution guidelines
=====================================

**WORK IN PROGRESS**

So you're thinking of contributing to our documentation? See something that
needs fixing, or something that could be improved? Great! Below you'll find some
helpful guidelines to get you started, and to familiarize you with the
approach we have been trying to follow.

In general, there are two main types of contributions:

* **General improvements:** typo corrections, fixing broken refs or links,
  correcting inaccurate or out-of-date information, and offering better
  explanations through clearer writing and additional examples.
* **New features or new pages:** Adding a page of documentation that we
  haven't yet covered in our ongoing rewrite attempts as we move platforms, or
  documenting a new feature that has been added to AtoM since the last
  release.

We welcome both kinds of contributions from our users, and are always aiming
to improve our documentation as much and as often as possible. To maintain a
sense of consistency and quality over time, here are a few tips:

**BEFORE CONTRIBUTING**

1. **Read through some of the documents we've already created.** You'll notice
   that there is a consistent structure to most of them, which we will
   describe in greater detail below. By reading through some of our existing
   documentation, you will get a feeling for the overall structure and style.
   By looking at the source code (there's always a link to the source code in
   the sidebar), you can see how we've used Sphinx to style and structure the
   page.
2. **Familiarize yourself with Sphinx and reStructuredText before starting**:
   As outlined above in our :ref:`About <about-docs>` section, we are using
   the `Sphinx <http://sphinx-doc.org/index.html>`__ Python Documentation
   Generator to produce the AtoM documentation. Sphinx employs
   `reStructured Text <http://docutils.sf.net/rst.html>`__ as its markup
   language, and you'll need to understand how to use its syntax if you want
   to contribute. The "First Steps with Sphinx"
   (`here <http://sphinx-doc.org/tutorial.html>`__) is a great introduction
   to some of the key elements of Sphinx, and the reStructuredText Primer
   (`here <http://sphinx-doc.org/rest.html#rst-primer>`__) will introduce you
   to the key characteristics of reST.
3. **Examine the AtoM documentation**
   `glossary <https://www.accesstomemory.org/docs/2.0/user-manual/glossary/glossary/>`__:
   over the years, we have been adding to this glossary in an attempt to be
   consistent with how we refer to different parts of the application. You
   should try to use the same terms to refer to different parts of AtoM in
   your contributions, and you should link to the glossary (using the
   ``:term:`` reST markup) whenever possible - in general, we try to link a
   term the first time it is used in any paragraph.
4. **Make your contributions in the right place:** Are you contributing to the
   latest version of our docs, so that these improvements will be carried
   forward in the next version? Are you looking to edit the FAQ, but only able
   to find the User Manual? AtoM documentation is hosted on GitHub (`here
   <https://github.com/artefactual/atom-docs>`__), and it is kept in multiple
   "`branches <https://help.github.com/articles/github-glossary#branch>`__"
   - we have an *about-contribute* branch (where these documents live), an *faq*
   branch, and a branch for every major release version of our software (e.g.
   2.0, 2.1, 2.2, etc), where the User manual and the Administrator's manual
   are maintained. We will also be creating a development branch, where all new
   documentation will be added. Take a look around our repository or read the
   contribution instructions :ref:`above <contribute-docs-yourself>` for more
   information. If you're going to submit documentation for the User or Admin
   manuals, make sure you're submitting it to the development branch, so it is
   included in our next version!

**If you are contributing new documentation**

* **Start with an overview:**
* **Discuss how this is applied in AtoM:**
* **Offer quick links to the key sections of the page:**
* **Include comprehensive steps for every action:**
* **Include "Back to top" links at the end of major sections**

* Include examples of all admonitions
* Naming conventions for new files/refs?
*

:ref:`Back to top <about-docs>`

.. _contribute-docs-translations:

|globe2| Contribute documentation translations
==============================================

.. |globe2| image:: images/globe.png
   :height: 23
   :width: 23

Want to help us translate these docs into your language? We rely on our
amazing community volunteers to help us make AtoM a truly international
application. Currently we are using `Transifex
<https://www.transifex.com/projects/p/atom/>`__ to help us manage our project
translations.

* **See our instructions on how to contribute documentation translations in the
  AtoM Administrator's Manual** (coming soon)

**SEE ALSO**

* `Transifex <https://www.transifex.com/>`__
* `AtoM's Transifex project <https://www.transifex.com/projects/p/atom/>`__








